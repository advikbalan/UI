name: Build and Deploy Application

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Using Node.js 20.x

      # Step 3: Set npm registry to JFrog Artifactory and authenticate
      - name: Configure npm to use JFrog Artifactory
        run: |
          # Set the npm registry to point to JFrog Artifactory npm repository
          cd api-catalog && npm config set registry https://pkhostingltd.jfrog.io/artifactory/api/npm/eai-uac-npm-virtual/
          
          # Set up authentication using API token stored in GitHub Secrets
          echo "https://pkhostingltd.jfrog.io/artifactory/api/npm/eai-uac-npm-virtual/:_authToken=${{ secrets.JFROG_API_TOKEN }}" > ~/.npmrc

      # Step 4: Install npm dependencies from JFrog Artifactory
      - name: Install npm dependencies
        run: cd api-catalog && npm install
        
      # Step 5: Build the application
      - name: Build Application
        run: cd api-catalog && npm run build   

      # Step 6: Upload build artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: api-catalog/dist

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build  # Ensures this job runs after the build job

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to JFrog Docker Registry
      - name: Log in to JFrog Docker Registry
        run: echo "${{ secrets.JFROG_DOCKER_PASSWORD }}" | docker login pkhostingltd.jfrog.io --username ${{ secrets.JFROG_DOCKER_USERNAME }} --password-stdin

      # Step 3: Build Docker Image with Git SHA tag
      - name: Build Docker Image with Git SHA
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t pkhostingltd.jfrog.io/eai-docker-virtual/api-catalog:${IMAGE_TAG} -f ./api-catalog/Dockerfile .

      # Step 4: Push Docker Image to JFrog Artifactory with Git SHA tag
      - name: Push Docker Image with Git SHA tag
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker push pkhostingltd.jfrog.io/eai-docker-virtual/api-catalog:${IMAGE_TAG}
